# Generated by Django 4.2.7 on 2025-09-25 10:06

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('program_type', models.CharField(choices=[('scholarship', 'Scholarship Program'), ('workshop', 'Workshop & Mentorship'), ('community', 'Community Project'), ('other', 'Other')], max_length=20)),
                ('short_description', models.TextField(max_length=300)),
                ('full_description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('image', models.ImageField(upload_to='programs/')),
                ('icon', models.CharField(help_text='CSS class for icon', max_length=50)),
                ('color', models.CharField(default='primary', max_length=20)),
                ('beneficiaries_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.PositiveIntegerField(default=0, help_text='Percentage')),
                ('eligibility_criteria', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('application_process', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('requirements', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('is_accepting_applications', models.BooleanField(default=True)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProjectLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('county', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('ward', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('project_types', models.CharField(help_text='Comma-separated project types', max_length=200)),
                ('description', models.TextField()),
                ('beneficiaries_count', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateField()),
                ('main_image', models.ImageField(upload_to='project_locations/')),
                ('gallery_images', models.TextField(blank=True, help_text='JSON array of image URLs', null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='active', max_length=20)),
            ],
            options={
                'verbose_name': 'Project Location',
                'verbose_name_plural': 'Project Locations',
                'ordering': ['county', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ScholarshipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('county', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('ward', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('education_level', models.CharField(choices=[('high_school', 'High School'), ('college', 'College/University'), ('vocational', 'Vocational Training'), ('other', 'Other')], max_length=20)),
                ('current_school', models.CharField(max_length=200)),
                ('class_year', models.CharField(max_length=50)),
                ('previous_grades', models.TextField(help_text='Previous academic performance')),
                ('family_income', models.CharField(max_length=100)),
                ('family_size', models.PositiveIntegerField()),
                ('guardian_name', models.CharField(max_length=200)),
                ('guardian_occupation', models.CharField(max_length=100)),
                ('guardian_phone', models.CharField(max_length=20)),
                ('why_deserve_scholarship', models.TextField(max_length=1000)),
                ('career_goals', models.TextField(max_length=1000)),
                ('community_involvement', models.TextField(blank=True, max_length=1000, null=True)),
                ('academic_transcripts', models.FileField(blank=True, null=True, upload_to='applications/transcripts/')),
                ('recommendation_letter', models.FileField(blank=True, null=True, upload_to='applications/recommendations/')),
                ('financial_documents', models.FileField(blank=True, null=True, upload_to='applications/financial/')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('waitlisted', 'Waitlisted')], default='pending', max_length=20)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=100, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('scholarship_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('scholarship_duration', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Scholarship Application',
                'verbose_name_plural': 'Scholarship Applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkshopRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('county', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('workshop_type', models.CharField(choices=[('life_skills', 'Life Skills Training'), ('digital_literacy', 'Digital Literacy'), ('career_guidance', 'Career Guidance'), ('entrepreneurship', 'Entrepreneurship'), ('leadership', 'Leadership Development'), ('other', 'Other')], max_length=20)),
                ('preferred_schedule', models.CharField(choices=[('weekdays', 'Weekdays'), ('weekends', 'Weekends'), ('evenings', 'Evenings'), ('flexible', 'Flexible')], max_length=50)),
                ('education_level', models.CharField(max_length=100)),
                ('current_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_experience', models.TextField(blank=True, null=True)),
                ('expectations', models.TextField(max_length=500)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('workshop_batch', models.CharField(blank=True, max_length=100, null=True)),
                ('completion_status', models.CharField(choices=[('registered', 'Registered'), ('attending', 'Attending'), ('completed', 'Completed'), ('dropped', 'Dropped Out')], default='registered', max_length=20)),
            ],
            options={
                'verbose_name': 'Workshop Registration',
                'verbose_name_plural': 'Workshop Registrations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('story', ckeditor_uploader.fields.RichTextUploadingField()),
                ('profile_image', models.ImageField(upload_to='success_stories/')),
                ('before_image', models.ImageField(blank=True, null=True, upload_to='success_stories/')),
                ('after_image', models.ImageField(blank=True, null=True, upload_to='success_stories/')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.CharField(max_length=100)),
                ('current_status', models.CharField(max_length=200)),
                ('achievements', models.TextField()),
                ('impact_metrics', models.TextField(blank=True, help_text='JSON format for various metrics', null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('publish_date', models.DateField(default=django.utils.timezone.now)),
                ('order', models.PositiveIntegerField(default=0)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='success_stories', to='programs.program')),
            ],
            options={
                'verbose_name': 'Success Story',
                'verbose_name_plural': 'Success Stories',
                'ordering': ['-publish_date', 'order'],
            },
        ),
    ]
